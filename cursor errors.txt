warning: 'starscream': found 1 file(s) which are unhandled; explicitly declare them as resources or exclude from the target
    /Users/robertsteinegger/Desktop/BevaixBot/.build/checkouts/Starscream/Sources/Info.plist
[1/1] Planning build
Building for debugging...
/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:5138:13: warning: initialization of immutable value 'maxSpread' was never used; consider replacing with assignment to '_' or removing it
 5136 |         // Calculate spread multiplier (higher spread = more allocation)
 5137 |         let minSpread = getDouble("CROSS_EXCHANGE_MIN_SPREAD_THRESHOLD", defaultValue: 0.0005)
 5138 |         let maxSpread = 0.01 // 1% max spread for scaling
      |             `- warning: initialization of immutable value 'maxSpread' was never used; consider replacing with assignment to '_' or removing it
 5139 |         let spreadMultiplier = min(5.0, max(1.0, spread / minSpread)) // 1x to 5x multiplier
 5140 |         

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:12581:19: warning: result of call to 'executeTrade(exchange:pair:side:price:amount:strategy:)' is unused
12579 |         // Execute the trade
12580 |         if action.action == "buy" {
12581 |             await executeTrade(
      |                   `- warning: result of call to 'executeTrade(exchange:pair:side:price:amount:strategy:)' is unused
12582 |                 exchange: "kucoin",
12583 |                 pair: pair,

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:12590:19: warning: result of call to 'executeTrade(exchange:pair:side:price:amount:strategy:)' is unused
12588 |             )
12589 |         } else if action.action == "sell" {
12590 |             await executeTrade(
      |                   `- warning: result of call to 'executeTrade(exchange:pair:side:price:amount:strategy:)' is unused
12591 |                 exchange: "kucoin",
12592 |                 pair: pair,

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:16917:24: error: cannot find 'buySpot' in scope
16915 |         
16916 |         // Execute both legs using existing executeTrade function from Block 14
16917 |         let spotSide = buySpot ? "buy" : "sell"
      |                        `- error: cannot find 'buySpot' in scope
16918 |         let futuresSide = buySpot ? "sell" : "buy"
16919 |         

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:16918:27: error: cannot find 'buySpot' in scope
16916 |         // Execute both legs using existing executeTrade function from Block 14
16917 |         let spotSide = buySpot ? "buy" : "sell"
16918 |         let futuresSide = buySpot ? "sell" : "buy"
      |                           `- error: cannot find 'buySpot' in scope
16919 |         
16920 |         let spotSuccess = await executeTrade(exchange: spotExchange, pair: pair, side: spotSide, price: spotPrice, amount: tradeAmount / spotPrice, strategy: "cross_exchange")

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:16920:56: error: cannot find 'spotExchange' in scope
16918 |         let futuresSide = buySpot ? "sell" : "buy"
16919 |         
16920 |         let spotSuccess = await executeTrade(exchange: spotExchange, pair: pair, side: spotSide, price: spotPrice, amount: tradeAmount / spotPrice, strategy: "cross_exchange")
      |                                                        `- error: cannot find 'spotExchange' in scope
16921 |         let futuresSuccess = await executeTrade(exchange: futuresExchange, pair: pair, side: futuresSide, price: futuresPrice, amount: tradeAmount / futuresPrice, strategy: "cross_exchange")
16922 |         

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:16921:59: error: cannot find 'futuresExchange' in scope
16919 |         
16920 |         let spotSuccess = await executeTrade(exchange: spotExchange, pair: pair, side: spotSide, price: spotPrice, amount: tradeAmount / spotPrice, strategy: "cross_exchange")
16921 |         let futuresSuccess = await executeTrade(exchange: futuresExchange, pair: pair, side: futuresSide, price: futuresPrice, amount: tradeAmount / futuresPrice, strategy: "cross_exchange")
      |                                                           `- error: cannot find 'futuresExchange' in scope
16922 |         
16923 |         if spotSuccess && futuresSuccess {

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:16935:23: error: cannot find 'buySpot' in scope
16933 |                 exchange: "cross",
16934 |                 pair: pair,
16935 |                 side: buySpot ? "buy_spot_sell_futures" : "sell_spot_buy_futures",
      |                       `- error: cannot find 'buySpot' in scope
16936 |                 price: spotPrice,
16937 |                 amount: tradeAmount / spotPrice,

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:17832:13: warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
17830 |     // Execute momentum-based trade
17831 |     static func executeMomentumTrade(signal: MomentumSignal) async -> Bool {
17832 |         let positionSize = await DynamicPositionSizingEngine.getCurrentPositionSize(
      |             `- warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
17833 |             pair: signal.pair,
17834 |             opportunity: ArbitrageOpportunity(

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18063:27: warning: result of call to 'executeUHFTTrade(opportunity:)' is unused
18061 |             for opportunity in opportunities {
18062 |                 if opportunity.confidence > 0.7 {
18063 |                     await executeUHFTTrade(opportunity: opportunity)
      |                           `- warning: result of call to 'executeUHFTTrade(opportunity:)' is unused
18064 |                 }
18065 |             }

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18230:27: warning: result of call to 'executeOptionsArbitrage(opportunity:)' is unused
18228 |             for opportunity in opportunities {
18229 |                 if opportunity.confidence > 0.8 && opportunity.profitPotential > 1.0 {
18230 |                     await executeOptionsArbitrage(opportunity: opportunity)
      |                           `- warning: result of call to 'executeOptionsArbitrage(opportunity:)' is unused
18231 |                 }
18232 |             }

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18296:13: warning: immutable value 'scenario' was never used; consider replacing with '_' or removing it
18294 |         let scenarios = ["bullish", "bearish", "sideways", "volatile"]
18295 |         
18296 |         for scenario in scenarios {
      |             `- warning: immutable value 'scenario' was never used; consider replacing with '_' or removing it
18297 |             let amplitude = Double.random(in: 0.1...1.0)
18298 |             let phase = Double.random(in: 0...2 * Double.pi)

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18355:13: warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
18353 |     // Execute quantum-enhanced trade
18354 |     static func executeQuantumTrade(prediction: QuantumPrediction) async -> Bool {
18355 |         let positionSize = await DynamicPositionSizingEngine.getCurrentPositionSize(
      |             `- warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
18356 |             pair: prediction.pair,
18357 |             opportunity: ArbitrageOpportunity(

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18389:27: warning: result of call to 'executeQuantumTrade(prediction:)' is unused
18387 |                 
18388 |                 if prediction.confidence > 0.8 {
18389 |                     await executeQuantumTrade(prediction: prediction)
      |                           `- warning: result of call to 'executeQuantumTrade(prediction:)' is unused
18390 |                 }
18391 |             }

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18531:13: warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
18529 |     // Execute pattern-based trade
18530 |     static func executePatternTrade(pattern: OrderFlowPattern) async -> Bool {
18531 |         let positionSize = await DynamicPositionSizingEngine.getCurrentPositionSize(
      |             `- warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
18532 |             pair: pattern.pair,
18533 |             opportunity: ArbitrageOpportunity(

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18565:27: warning: result of call to 'executeFrontRunningTrade(order:)' is unused
18563 |             for order in orders {
18564 |                 if order.confidence > 0.8 && order.orderSize > 100000 { // k+ orders
18565 |                     await executeFrontRunningTrade(order: order)
      |                           `- warning: result of call to 'executeFrontRunningTrade(order:)' is unused
18566 |                 }
18567 |             }

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18573:27: warning: result of call to 'executePatternTrade(pattern:)' is unused
18571 |             for pattern in patterns {
18572 |                 if pattern.confidence > 0.8 && pattern.expectedMove > 0.03 { // 3%+ expected move
18573 |                     await executePatternTrade(pattern: pattern)
      |                           `- warning: result of call to 'executePatternTrade(pattern:)' is unused
18574 |                 }
18575 |             }

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18609:13: warning: immutable value 'pair' was never used; consider replacing with '_' or removing it
18607 |         var sentimentData: [SentimentData] = []
18608 |         
18609 |         for pair in pairs {
      |             `- warning: immutable value 'pair' was never used; consider replacing with '_' or removing it
18610 |             let sources = ["twitter", "reddit", "telegram", "discord"]
18611 |             

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18637:13: warning: immutable value 'pair' was never used; consider replacing with '_' or removing it
18635 |         var newsData: [SentimentData] = []
18636 |         
18637 |         for pair in pairs {
      |             `- warning: immutable value 'pair' was never used; consider replacing with '_' or removing it
18638 |             // Simulate news sentiment analysis
18639 |             let sentiment = Double.random(in: -0.8...0.8) // News tends to be less extreme

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18718:13: warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
18716 |     // Execute sentiment-based trade
18717 |     static func executeSentimentTrade(signal: SentimentSignal) async -> Bool {
18718 |         let positionSize = await DynamicPositionSizingEngine.getCurrentPositionSize(
      |             `- warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
18719 |             pair: signal.pair,
18720 |             opportunity: ArbitrageOpportunity(

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18752:27: warning: result of call to 'executeSentimentTrade(signal:)' is unused
18750 |             for signal in signals {
18751 |                 if signal.confidence > 0.8 && abs(signal.overallSentiment) > 0.4 {
18752 |                     await executeSentimentTrade(signal: signal)
      |                           `- warning: result of call to 'executeSentimentTrade(signal:)' is unused
18753 |                 }
18754 |             }

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18830:13: warning: initialization of immutable value 'prices' was never used; consider replacing with assignment to '_' or removing it
18828 |         
18829 |         // Simulate price data for indicators
18830 |         let prices = (1...50).map { _ in Double.random(in: 90...110) }
      |             `- warning: initialization of immutable value 'prices' was never used; consider replacing with assignment to '_' or removing it
18831 |         
18832 |         // RSI (Relative Strength Index)

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18885:13: warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
18883 |     // Execute ML pattern-based trade
18884 |     static func executeMLPatternTrade(pattern: MLPattern) async -> Bool {
18885 |         let positionSize = await DynamicPositionSizingEngine.getCurrentPositionSize(
      |             `- warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
18886 |             pair: pattern.pair,
18887 |             opportunity: ArbitrageOpportunity(

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18934:17: warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
18932 |             let expectedMove = avgStrength * 0.05 // Max 5% move
18933 |             
18934 |             let positionSize = await DynamicPositionSizingEngine.getCurrentPositionSize(
      |                 `- warning: initialization of immutable value 'positionSize' was never used; consider replacing with assignment to '_' or removing it
18935 |                 pair: pair,
18936 |                 opportunity: ArbitrageOpportunity(

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18971:27: warning: result of call to 'executeMLPatternTrade(pattern:)' is unused
18969 |             for pattern in patterns {
18970 |                 if pattern.confidence > 0.8 && pattern.completionProbability > 0.85 {
18971 |                     await executeMLPatternTrade(pattern: pattern)
      |                           `- warning: result of call to 'executeMLPatternTrade(pattern:)' is unused
18972 |                 }
18973 |             }

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:18978:23: warning: result of call to 'executeTechnicalTrade(pair:indicators:)' is unused
18976 |             for pair in pairs {
18977 |                 let indicators = await calculateTechnicalIndicators(pair: pair)
18978 |                 await executeTechnicalTrade(pair: pair, indicators: indicators)
      |                       `- warning: result of call to 'executeTechnicalTrade(pair:indicators:)' is unused
18979 |             }
18980 |             

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:19086:17: warning: initialization of immutable value 'leverage' was never used; consider replacing with assignment to '_' or removing it
19084 |             // Simulate leveraged position detection
19085 |             let positionSize = Double.random(in: 10000...100000) // k-k
19086 |             let leverage = Double.random(in: 5...20) // 5x-20x leverage
      |                 `- warning: initialization of immutable value 'leverage' was never used; consider replacing with assignment to '_' or removing it
19087 |             let liquidationPrice = Double.random(in: 95...105) // Near current price
19088 |             let currentPrice = 100.0

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:19150:27: warning: result of call to 'executeSandwichAttack(opportunity:)' is unused
19148 |             for opportunity in sandwichOps {
19149 |                 if opportunity.confidence > 0.85 && opportunity.netProfit > 200 {
19150 |                     await executeSandwichAttack(opportunity: opportunity)
      |                           `- warning: result of call to 'executeSandwichAttack(opportunity:)' is unused
19151 |                 }
19152 |             }

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:19158:27: warning: result of call to 'executeMEVArbitrage(opportunity:)' is unused
19156 |             for opportunity in arbitrageOps {
19157 |                 if opportunity.confidence > 0.9 && opportunity.netProfit > 100 {
19158 |                     await executeMEVArbitrage(opportunity: opportunity)
      |                           `- warning: result of call to 'executeMEVArbitrage(opportunity:)' is unused
19159 |                 }
19160 |             }

/Users/robertsteinegger/Desktop/BevaixBot/Sources/BevaixBot/main.swift:19166:27: warning: result of call to 'executeLiquidationAttack(opportunity:)' is unused
19164 |             for opportunity in liquidationOps {
19165 |                 if opportunity.confidence > 0.8 && opportunity.profitPotential > 500 {
19166 |                     await executeLiquidationAttack(opportunity: opportunity)
      |                           `- warning: result of call to 'executeLiquidationAttack(opportunity:)' is unused
19167 |                 }
19168 |             }
